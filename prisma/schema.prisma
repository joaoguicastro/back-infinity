datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  seed     = "ts-node ./prisma/seed.ts"
}

model Aluno {
  id                 Int        @id @default(autoincrement())
  nome               String
  cpf                String     @unique
  nomeResponsavel    String
  dataNascimento     DateTime
  endereco           String
  telefone           String? // Permitir que seja opcional
  cursoMatriculado   Curso?     @relation(fields: [cursoMatriculadoId], references: [id])
  cursoMatriculadoId Int?
  Presenca           Presenca[]
}

model Curso {
  id           Int          @id @default(autoincrement())
  nome         String
  disciplinas  String[]
  cargaHoraria Int
  alunos       Aluno[]
  financeiro   Financeiro[]
  diasDaSemana String[] // Novos campos
  horasPorDia  Int? // Novos campos
  Presenca     Presenca[]
}

model Financeiro {
  id                 Int       @id @default(autoincrement())
  curso              Curso?    @relation(fields: [cursoId], references: [id])
  cursoId            Int?
  valor              Float // Valor total da parcela
  valorOriginal      Float? // Valor original da parcela (novo campo)
  valorPago          Float? // Valor efetivamente pago
  desconto           Float? // Desconto aplicado
  quantidadeParcelas Int? // Quantidade de parcelas
  status             String // Status da parcela (pendente, pago, etc.)
  dataPagamento      DateTime? // Data de pagamento
  dataVencimento     DateTime? // Data de vencimento de cada parcela
}

model Usuario {
  id       Int      @id @default(autoincrement())
  nome     String
  email    String   @unique
  senha    String
  cargo    String
  criadoEm DateTime @default(now())
}

model Presenca {
  id         Int      @id @default(autoincrement())
  aluno      Aluno    @relation(fields: [alunoId], references: [id])
  alunoId    Int
  curso      Curso    @relation(fields: [cursoId], references: [id])
  cursoId    Int
  data       DateTime @default(now())
  presente   Boolean  @default(false) // Indica se o aluno estava presente
  observacao String? // Campo opcional para observações
}
